$date
	Sun Sep 08 18:32:29 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module TestCode $end
$var wire 1 ! Y $end
$var parameter 32 " stop_time $end
$var reg 8 # I [7:0] $end
$var reg 3 $ Sel [2:0] $end
$scope module UUT $end
$var wire 8 % I [7:0] $end
$var wire 3 & Sel [2:0] $end
$var wire 4 ' w [3:0] $end
$var wire 1 ! Y $end
$scope module F1 $end
$var wire 4 ( I [3:0] $end
$var wire 2 ) Sel [1:0] $end
$var wire 2 * w [1:0] $end
$var wire 1 + Y $end
$scope module T1 $end
$var wire 2 , I [1:0] $end
$var wire 1 - S $end
$var wire 1 . Y $end
$upscope $end
$scope module T2 $end
$var wire 2 / I [1:0] $end
$var wire 1 0 S $end
$var wire 1 1 Y $end
$upscope $end
$scope module T3 $end
$var wire 2 2 I [1:0] $end
$var wire 1 3 S $end
$var wire 1 + Y $end
$upscope $end
$upscope $end
$scope module F2 $end
$var wire 4 4 I [3:0] $end
$var wire 2 5 Sel [1:0] $end
$var wire 2 6 w [1:0] $end
$var wire 1 7 Y $end
$scope module T1 $end
$var wire 2 8 I [1:0] $end
$var wire 1 9 S $end
$var wire 1 : Y $end
$upscope $end
$scope module T2 $end
$var wire 2 ; I [1:0] $end
$var wire 1 < S $end
$var wire 1 = Y $end
$upscope $end
$scope module T3 $end
$var wire 2 > I [1:0] $end
$var wire 1 ? S $end
$var wire 1 7 Y $end
$upscope $end
$upscope $end
$scope module F3 $end
$var wire 4 @ I [3:0] $end
$var wire 2 A Sel [1:0] $end
$var wire 2 B w [1:0] $end
$var wire 1 ! Y $end
$scope module T1 $end
$var wire 2 C I [1:0] $end
$var wire 1 D S $end
$var wire 1 E Y $end
$upscope $end
$scope module T2 $end
$var wire 2 F I [1:0] $end
$var wire 1 G S $end
$var wire 1 H Y $end
$upscope $end
$scope module T3 $end
$var wire 2 I I [1:0] $end
$var wire 1 J S $end
$var wire 1 ! Y $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1100100 "
$end
#0
$dumpvars
0J
b11 I
1H
1G
b11 F
1E
1D
b11 C
b11 B
b1 A
b1111 @
0?
b1 >
1=
0<
b1 ;
0:
09
b0 8
17
b1 6
b0 5
b1 4
03
b1 2
11
00
b11 /
0.
0-
b0 ,
1+
b1 *
b0 )
b11 (
b1111 '
b100 &
b10011 %
b100 $
b10011 #
1!
$end
#10
0!
b0 F
0+
b1100 '
b1100 @
07
1-
b0 *
b0 2
01
10
19
b0 6
b0 >
0=
1<
1E
0D
b10 B
b10 I
0H
0G
b1 /
b0 ;
b1 )
b1 5
b0 A
b1 (
b0 4
b1 $
b1 &
b1 #
b1 %
#20
0-
b0 *
b0 2
01
00
13
09
0<
1?
b10 /
b10 )
b10 5
b10 (
b10 $
b10 &
b10 #
b10 %
#30
1!
b11 B
b11 I
1H
b1 F
b1101 '
b1101 @
1+
1-
b1 *
b1 2
11
10
03
19
1<
0?
b1 )
b1 5
b1 $
b1 &
#40
1!
b11 B
b11 I
1H
b1 F
1.
0-
b10 *
b10 2
01
00
b1101 '
b1101 @
1+
13
09
0<
1?
b1 ,
b0 /
b10 )
b10 5
b100 (
b10 $
b10 &
b100 #
b100 %
#50
b1 F
0!
0.
b1 *
b1 2
11
b1101 '
b1101 @
1+
03
0?
1E
1D
b10 B
b10 I
0H
1G
b10 ,
b1 /
b0 )
b0 5
b1 A
b1001 (
b100 $
b100 &
b1001 #
b1001 %
#60
1!
b11 B
b11 I
1H
b10 F
17
b1110 '
b1110 @
0+
b1 6
b1 >
1=
0.
1-
b0 *
b0 2
01
10
19
1<
b0 ,
b10 ;
b1 )
b1 5
b1 (
b10 4
b101 $
b101 &
b100001 #
b100001 %
#70
1!
b11 B
b11 I
1H
b10 F
b11 6
b11 >
1:
13
b1110 '
b1110 @
17
1?
b10 8
b11 )
b11 5
b1010 4
b111 $
b111 &
b10100001 #
b10100001 %
#80
0!
03
b1110 '
b1110 @
17
0?
1E
0D
b10 B
b10 I
0H
0G
b1 )
b1 5
b0 A
b1 $
b1 &
#100
