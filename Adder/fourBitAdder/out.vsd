$date
	Mon Sep 02 04:16:00 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module bitfouraddertest $end
$var wire 4 ! S [3:0] $end
$var wire 1 " Cout $end
$var parameter 32 # stop_time $end
$var reg 4 $ Ain [3:0] $end
$var reg 4 % Bin [3:0] $end
$var reg 1 & Cin $end
$scope module UUT $end
$var wire 4 ' Ain [3:0] $end
$var wire 4 ( Bin [3:0] $end
$var wire 1 & Cin $end
$var wire 1 ) w3 $end
$var wire 1 * w2 $end
$var wire 1 + w1 $end
$var wire 4 , S [3:0] $end
$var wire 1 " Cout $end
$scope module FA1 $end
$var wire 1 - Ain $end
$var wire 1 . Bin $end
$var wire 1 & Cin $end
$var wire 1 + Cout $end
$var wire 1 / w2 $end
$var wire 1 0 w1 $end
$var wire 1 1 o1 $end
$var wire 1 2 S $end
$scope module HA1 $end
$var wire 1 - Ain $end
$var wire 1 . Bin $end
$var wire 1 0 Cout $end
$var wire 1 1 S $end
$upscope $end
$scope module HA2 $end
$var wire 1 1 Ain $end
$var wire 1 & Bin $end
$var wire 1 / Cout $end
$var wire 1 2 S $end
$upscope $end
$upscope $end
$scope module FA2 $end
$var wire 1 3 Ain $end
$var wire 1 4 Bin $end
$var wire 1 + Cin $end
$var wire 1 * Cout $end
$var wire 1 5 w2 $end
$var wire 1 6 w1 $end
$var wire 1 7 o1 $end
$var wire 1 8 S $end
$scope module HA1 $end
$var wire 1 3 Ain $end
$var wire 1 4 Bin $end
$var wire 1 6 Cout $end
$var wire 1 7 S $end
$upscope $end
$scope module HA2 $end
$var wire 1 7 Ain $end
$var wire 1 + Bin $end
$var wire 1 5 Cout $end
$var wire 1 8 S $end
$upscope $end
$upscope $end
$scope module FA3 $end
$var wire 1 9 Ain $end
$var wire 1 : Bin $end
$var wire 1 * Cin $end
$var wire 1 ) Cout $end
$var wire 1 ; w2 $end
$var wire 1 < w1 $end
$var wire 1 = o1 $end
$var wire 1 > S $end
$scope module HA1 $end
$var wire 1 9 Ain $end
$var wire 1 : Bin $end
$var wire 1 < Cout $end
$var wire 1 = S $end
$upscope $end
$scope module HA2 $end
$var wire 1 = Ain $end
$var wire 1 * Bin $end
$var wire 1 ; Cout $end
$var wire 1 > S $end
$upscope $end
$upscope $end
$scope module FA4 $end
$var wire 1 ? Ain $end
$var wire 1 @ Bin $end
$var wire 1 ) Cin $end
$var wire 1 " Cout $end
$var wire 1 A w2 $end
$var wire 1 B w1 $end
$var wire 1 C o1 $end
$var wire 1 D S $end
$scope module HA1 $end
$var wire 1 ? Ain $end
$var wire 1 @ Bin $end
$var wire 1 B Cout $end
$var wire 1 C S $end
$upscope $end
$scope module HA2 $end
$var wire 1 C Ain $end
$var wire 1 ) Bin $end
$var wire 1 A Cout $end
$var wire 1 D S $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10100000 #
$end
#0
$dumpvars
1D
1C
0B
0A
1@
0?
1>
1=
0<
0;
0:
19
08
07
06
05
04
03
12
11
00
0/
1.
0-
b1101 ,
0+
0*
0)
b1001 (
b100 '
0&
b1001 %
b100 $
0"
b1101 !
$end
#10
0D
b111 !
b111 ,
18
0C
17
0@
13
b1 %
b1 (
b110 $
b110 '
#20
1"
1A
1)
0>
1;
08
1*
b1 !
b1 ,
0D
07
16
1C
14
1?
b11 %
b11 (
b1110 $
b1110 '
#30
18
0;
b10 !
b10 ,
02
1+
0*
0=
1<
01
10
06
04
1:
1@
1-
03
0?
b1101 %
b1101 (
b101 $
b101 '
#160
